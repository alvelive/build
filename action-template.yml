name: 'Custom Docker Build and Push'
description: 'Build and push Docker images with caching'
inputs:
  repo:
    description: 'Repository name will be suffixed to image name as branch_repo_name:commit_hash'
    required: true
  branch:
    description: 'Branch name will be prefixed to image name as branch_repo_name:commit_hash'
    required: false
  commit-hash:
    description: 'Commit hash'
    required: false
    default: 'latest'
  docker-username:
    description: 'Docker Hub username'
    required: true
  docker-password:
    description: 'Docker Hub password'
    required: true
  env-file:
    description: '.env file contents'
    required: false
  push:
    description: 'Should it push image to docker'
    required: false
    default: true
  github-username:
    description: 'GitHub username, will be provided as a secret named github_username'
    required: false
  github-token:
    description: 'GitHub Personal Access Token, will be provided as a secret named github_pat'
    required: false
  npmrc:
    description: '.npmrc file to use for private registries, will be provided as a secret named npmrc'
    required: false
  bunfig:
    description: 'bunfig.toml file to use for private registries, will be provided as a secret named bunfig'
    required: false
  context:
    description: 'Path to the build context'
    required: false
    default: '.'
  target:
    description: 'Build target'
    required: false

runs:
  using: 'composite'
  steps:
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Set Docker Image Name
      id: set-image-name
      shell: bash
      env:
        DOCKER_USERNAME: '${{ inputs.docker-username }}'
        GITHUB_BRANCH: '${{ inputs.branch }}'
        GITHUB_REPO: '${{ inputs.repo }}'
        GITHUB_SHA: '${{ inputs.commit-hash }}'
      run: curl -o- {{base_url}}/parse_image_name.sh | bash

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ inputs.docker-username }}
        password: ${{ inputs.docker-password }}

    - name: Copy .env file contents
      if: inputs.env-file
      run: |
        echo "${{ inputs.env-file }}" > .env
      shell: bash

    - name: Create secrets
      id: parse-secrets
      env:
        BUNFIG: ${{ inputs.bunfig }}
        GITHUB_TOKEN: ${{ inputs.github-token }}
        GITHUB_USERNAME: ${{ inputs.github-username }}
        NPMRC: ${{ inputs.npmrc }}
      run: curl -o- {{base_url}}/parse_secrets.sh | bash

    - name: Build and Push Docker Image
      uses: docker/build-push-action@v5
      env:
        DOCKER_BUILDKIT: 1
      with:
        file: ${{ inputs.context }}/Dockerfile
        context: ${{ inputs.context }}
        target: ${{ inputs.target }}
        push: ${{ inputs.push }}
        tags: ${{ env.tagged-image-name }}
        cache-from: type=registry,ref=${{ env.image-name }}:buildcache
        cache-to: type=registry,ref=${{ env.image-name }}:buildcache,mode=max
        builder: ${{ steps.setup-buildx.outputs.name }}
        secret-files: |
          github_username=${{ env.alvelive-secrets-dir }}/github_username
          github_token=${{ env.alvelive-secrets-dir }}/github_token
          npmrc=${{ env.alvelive-secrets-dir }}/npmrc
          bunfig=${{ env.alvelive-secrets-dir }}/bunfig
